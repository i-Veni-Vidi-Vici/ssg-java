package com.sh.literal;

/**
 * 변수 명명 규칙
 * - 지키지 않을 경우 컴파일 오류 유발
 * - 지키지 않아도 컴파일 오류는 나지 않지만, 자바 개발자 사이에 혼동을 줄수 있는 부분
 *
 * A. 컴파일 오류 유발
 * - 블럭안에 동일한 변수 이름을 작성할 수 없다
 * -자바 예약어 사용할수 없다
 * - 변수명은 대소문자를 구분한다
 * - 숫자로 시작할수 없다
 * - 특수기호는 _$만 사용할수 있다
 *
 * B. 관례적 규칙
 * -변수명 길이에 제한은 없지만, 적절한 길이로 작성해야 한다
 * -합성어로 이루어진 경우, 소문자로 시작, 연결되는 단어마다 대문자로 시작한다 (Camel-casting)
 * - 단어 사이의 연결을 _로 처리하지 않는다. (Snake-casting x)
 * - 한글로 변수명을 작성하는 것은 가능하나 자제한다.
 * - 전형적인 변수명이 있다면 그걸 사용한다.
 * - 명사형으로 작성한다
 * - boolean형은 논리형을 유추할수 있는 변수명을 사용한다(형용사)
 * - 값의 의미를 명확히 대변해야 한다
 *
 */
public class VariableApp3 {
    public static void main(String[] args){
        //컴파일 오류 유발 예제
        int age = 20;
        //double age = 20.0; //블럭안에 동일한 변수 이름을 사용할수 없다.
        //int true = 100; //자바 예약어를 사용할 수 없다
        int Age = 30; //자바는 대소문자를 구분한다. 관례에 따라 소문자로 시작해야 한다
        boolean True = true; // 대소문자를 구분한다. 변수명은 관례에 따라 소문자로 시작해야 한다.
        //String 1stName = "길동" //숫자로 시작하지 않는다
        boolean $harp = false; //특수문자 $는 허용한다.
        String my_name = "신사임당"; //공백 특수문자는 사용할수 없다

        //관례적 명명법
        String osjfojsofejofjoesfjosefjosejfsoejfo = "abc";
                //변수명 길이에 제한은 없으나 적당한 길이로 명명한다
        int maxAge = 20; //카멜케이싱
        int MaxAge = 30; //클래스 명을 제외한 변수, 메소드, 필듬명은 모두 소문자로 시작한다
        //사용자 이름, 상품코드 결혼여부를 알리는 코드를 작성한다
        String 이름 = "김춘식";
        System.out.println(이름);
        //한글로 작성시 인코딩이 달라질시 깨지는 문제가 발생할수 있다. 영문을 사용하도록 한다

        //전형적인 변수명 - 코드리뷰가 쉽다
        int sum = 1000;
        int max = 100000;
        int min = 10000000;
        int count = 0;
        int cnt = 0;

        double goHome = 3.7; //변수명은 명사형을 작성하도록. 메소드는 동사형으로
        double Home = 3.9;

        boolean wannaBe=true;//논리형은 형용사로


    }
}
