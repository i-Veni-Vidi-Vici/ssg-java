<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- property: 하위에서 사용할 변수선언 -->
    <property name="LOG_DIR" value="/Users/Workspaces/spring_workspace/YangHeeyun/02-spring-webmvc/_04_exception_handling/logs"/>
    <property name="LOG_FILE_NAME" value="spring"/>

    <!-- appender : 실제 로그를 수행할 객체 -->
    <!--    ConsoleAppender : 수집된 로그를 콘솔에 출력-->
    <!--    RollingFileAppender : 지정한 시간단위로 별도의 파일에 출력 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %magenta(%-4relative) --- [ %thread{10} ] %cyan(%logger{20}) : %msg%n </pattern>
        </encoder>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/${LOG_FILE_NAME}.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-4relative --- [ %thread{10} ] %logger{35} - %msg%n</pattern>
        </encoder>
        <!-- fileNamePattern의 시간단위에 따라 별도의 로그 파일을 생성한다. 분단위까지 작성하면, 분단위 로그파일이 나온다.$ -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> <!-- RollingPolicy 특정일자가 지나면(보통 하루에 하나씩) zip파일로 만든다 -->
            <fileNamePattern>${LOG_DIR}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>365</maxHistory>
        </rollingPolicy>
    </appender>
    <!-- logger (root) : 특정 패키지별로 수집할 로그의 레벨 설정, 출력할 Appender연결 -->
    <logger name="org.springframework" level="info"/>
    <root level="info"> <!-- 루트의 전체레벨은 info . appendr야 console, File에 둘 다 출력해줘-->
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>