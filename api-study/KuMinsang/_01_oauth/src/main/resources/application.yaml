#          google:
#            client-name: ????
#            client-id: ????? ?? ?? ???
#            client-secret: ????? ?? ?? ????
#            redirect-uri: ???? ??? ??? ??? ?? URI
#            authorization-grant-type: authorization_code
#            scope:
#              - ??? ???? ??? ??? ??
#    #provider
#        provider:
#          google:
#            authorization-uri: ??? ??? ? ??
#            token-uri: ?? ?? ?? ??
#            user-info-uri: ??? ?? ?? ??
#            user-name-attribute: ?? ??? ??


spring:
  application:
    name: _01_oauth
  security:
    #registration
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
        #provider
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost/apistudydb
    username: sh
    password: sh
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        hbm2ddl:
          auto: validate
logging:
  level:
    root: info
    com.matdang: debug